% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/innerJoinSparse.R
\name{innerJoinSparse}
\alias{innerJoinSparse}
\title{Inner Join Two Sparse Matrices}
\usage{
innerJoinSparse(matrix1, matrix2, verbose = FALSE)
}
\arguments{
\item{matrix1}{A sparse matrix object of class \code{\link[S4Vectors]{sparseMatrix}}.}

\item{matrix2}{A sparse matrix object of class \code{\link[S4Vectors]{sparseMatrix}}.}

\item{verbose}{Logical; if TRUE, the function prints the number of common rows and columns found.}
}
\value{
Returns a sparse matrix containing the columns of both `matrix1` and `matrix2`
that have the same row names and column names, effectively binding the columns
of the two matrices together after subsetting to common rows and columns.
}
\description{
This function performs an inner join operation on two sparse matrices, returning
a combined matrix that contains only the rows and columns present in both input matrices.
It is specifically designed to work with matrices where both rows and columns can
be matched, typical in genomics data (e.g., gene expression matrices).
}
\examples{
# Load the Matrix package if not already loaded
if (!requireNamespace("Matrix", quietly = TRUE)) {
  install.packages("Matrix")
  library(Matrix)
}
# Create example sparse matrices
matrix1 <- Matrix::Matrix(c(0,0,2:0), 3, 5, sparse = TRUE,
                          dimnames = list(c("gene1", "gene2", "gene3"),
                                          c("sample1", "sample2", "sample3", "sample4", "sample5")))
matrix2 <- Matrix::Matrix(c(1,0,0:2), 3, 5, sparse = TRUE,
                          dimnames = list(c("gene1", "gene3", "gene4"),
                                          c("sample1", "sample3", "sample5", "sample6", "sample7")))
result <- innerJoinSparse(matrix1, matrix2, verbose = TRUE)
print(result)

}
